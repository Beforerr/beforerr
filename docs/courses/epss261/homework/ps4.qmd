---
title: Problem Set 4
number-sections: true
engine: julia
---

## Barycentric coordinates

> [1] We discussed barycentric coordinates in Lecture 08, pp. 11-12, and they are covered in Ch. 14 (Chanteur) in the ISSI book pp. 350-351. They are defined based on equation: $\left(\sum_{α=1}^4 μ_α\right) \mathbf{r}=\sum_{α=1}^4\left(μ_α \mathbf{r}_α\right)$ with the constraint $\sum_{α=1}^4 μ_α=1$. We said that this physically means $μ_α(\mathbf{r})=1+\mathbf{k}_α \cdot\left(\mathbf{r}-\mathbf{r}_α\right)$, a linear decrease of the weight with increasing distance from the vertex $r_α$ of the tetrahedron, scaled according to the reciprocal vector (the inverted distance of vertex to plane across it).

> Prove that $μ_α(\mathbf{r})=1+\mathbf{k}_α \cdot\left(\mathbf{r}-\mathbf{r}_α\right)$ by using the inverse transformation: $\mathbf{μ}=\mathbf{T}^{-1}\left(\mathbf{r}-\mathbf{r}_4\right)$.

In barycentric coordinates we have
$$
\mathbf{r}-\mathbf{r}_4
    = \sum_{α=1}^4(μ_α \mathbf{r}_α) -  (\sum_{α=1}^4 μ_α) \mathbf{r}_4
    = μ_1 \mathbf{d}_1 + μ_2 \mathbf{d}_2 + μ_3\mathbf{d}_3.
$$

A geometric way to see the first row of $T^{-1}$ is to note that

$$
\mathbf{k}_1 = \frac{\mathbf{d}_2\times\mathbf{d}_3} {\mathbf{d}_1\cdot(\mathbf{d}_2\times\mathbf{d}_3)}
$$

is the unique “reciprocal vector” satisfying $\mathbf{k}_1\cdot\mathbf{d}_1=1$ and $\mathbf{k}_1\cdot\mathbf{d}_2= \mathbf{k}_1\cdot\mathbf{d}_3=0$ .

so

$$
T^{-1} = \left(\begin{array}{l}
\mathbf{k}_1 \\
\mathbf{k}_2 \\
\mathbf{k}_3
\end{array}\right)
$$

with $\mathbf{k}_2,\mathbf{k}_3$ defined similarly by the appropriate cross products and normalization.

Therefore from $\mathbf{μ}=\mathbf{T}^{-1}\left(\mathbf{r}-\mathbf{r}_4\right)$, we have $μ_i = \mathbf{k}_i\cdot(\mathbf{r}-\mathbf{r}_{4})$, where $i=1,2,3$.

Notice that $\mathbf{r}-\mathbf{r}_{4} = (\mathbf{r}-\mathbf{r}_1) + \underbrace{(\mathbf{r}_1-\mathbf{r}_{4})}_{=\mathbf{d}_1}$ and by construction $\mathbf{k}_1\cdot\mathbf{d}_1=1$.

Therefore

$$
μ_1 = \mathbf{k}_1 \cdot(\mathbf{r}-\mathbf{r}_1) + \mathbf{k}_1 \cdot\mathbf{d}_1
    = 1 + \mathbf{k}_1 \cdot(\mathbf{r}-\mathbf{r}_1)
$$

By identical reasoning, $μ_α = 1 + \mathbf{k}_α \cdot (\mathbf{r}-\mathbf{r}_α)$.

## Cluster magnetopause crossing

> [2] For a CLUSTER magnetopause crossing on 2001/06/11 other than the one in the crib, compute Qsr, Elongation, Planarity and then the magnetopause normal and velocity. 
> - Compute the current density, and field curvature at that location. 
> - Compute the magnetopause thickness. 
> - Compare with table below from Keyser et al. (original from Dunlop and Balogh, 2004).
> - Create and discuss plots of data, satellite positions, table of results from the “simple” and from either the “symmetric” or the “relative timing” methods. See next page for details.

> Details: 
> - I have released a crib sheet (Hwk04_02.pro) to help. It is not to be executed and run. Take it as a cheat-sheet: a collection of command-line steps to aid your construction of your own code. I brought over the Cluster CDFs, which you can read using IDL or Python tools or spd_gui. (The data does not exist in SPDF, I had to get it from the Cluster Active Archive. Perhaps AMDA can help you read it.). Use ChatGPT widely to help you, but review documentation when unsure.
> - The IDL code above uses helper functions for the linear gradient estimation and timing analysis which we discussed in class, and I include in the zip file. You may rewrite them in Python if you wish or use them directly in IDL (they are very simple). They are called lingradest.pro and mptiming.pro.

Loading the data

```{julia}
using Speasy
spz = speasy()

using SpaceTools

trange = ["2001-06-11T20:10:30", "2001-06-11T20:12:30"]

# get_data("csa/C2_CP_FGM_FULL/B_vec_xyz_gse", trange)
get_data("csa/C1_CP_FGM_5VPS_ISR2/B_vec_xyz_isr2", trange)
# get_data("csa/C3_CP_WBD_WAVEFORM_BM2/B__C3_CP_WBD_WAVEFORM_BM2", trange)
```

## Wave polarization

> [3] Show (see Lecture 09 p. 31) that in the plane of polarization of an elliptically polarized  wave the ellipticity $ε=tan(β)$, and direction of polarization $φ$, can be obtained from the amplitudes ${B_{x0}}', {B_{y0}}'$ and the phase difference, $ψ$, between the y’ and x’ components from  the equations:  $sin(2β)=sin(ψ) 2 {B_{x0}}' {B_{y0}}'/({B_{x0}}'^2 + {B_{y0}}'^2)$, and: $tan(2φ)=cos(ψ) 2 {B_{x0}}' {B_{y0}}'/({B_{x0}}'^2 - {B_{y0}}'^2)$  This is the origin of the wave polarization analysis using minimum variance techniques. They are used both in exploration geophysics and in space physics, so it is good to be convinced of their origin.